---

- name: "Warden filer {{ filer_config.domain }}: Managing certificate directories"
  file:
    path: "{{ hm_warden_client__config_path }}/warden_filer_{{ filer_config.domain }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: "Warden filer {{ filer_config.domain }}: Uploading certificates"
  copy:
    src: "{{ item.src }}"
    dest: "{{ hm_warden_client__config_path }}/warden_filer_{{ filer_config.domain }}/{{ item.path }}"
    owner: root
    group: root
    mode: "{{ item.mode }}"
  with_filetree: "inventory/host_files/{{ inventory_hostname }}/honzamach.warden_client/warden_filer_{{ filer_config.domain }}"
  when: item.state == 'file'
  # Parametrized handlers: Please see the ``handlers/main.yml`` file for explanation of this hack.
  register: hmwc__regcrt
  notify:
    - Restart warden_filer receiver service
    - Restart warden_filer sender service

- name: "Warden filer {{ filer_config.domain }}: Looking for client certificate files on target host"
  find:
    paths: "{{ hm_warden_client__config_path }}/warden_filer_{{ filer_config.domain }}"
    patterns: '*.pem'
    file_type: file
  register: hmwc__regcrt_cnt

- name: "Warden filer {{ filer_config.domain }}: Checking for client certificate files on target host"
  fail:
      msg: "There are no Warden client certificates in {{ hm_warden_client__config_path }}/warden_filer_{{ filer_config.domain }}"
  ignore_errors: yes
  when: not hmwc__regcrt_cnt.matched

- name: "Warden filer {{ filer_config.domain }}: Configuring daemon"
  template:
    src: "{{ item }}"
    dest: "{{ hm_warden_client__config_path }}/warden_filer_{{ filer_config.domain }}.cfg"
    owner: root
    group: root
    mode: 0644
    backup: yes
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.warden_client/warden_filer.cfg.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.warden_client/warden_filer.cfg.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.warden_client/warden_filer.cfg.j2"
    - "inventory/group_files/servers/honzamach.warden_client/warden_filer.cfg.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.warden_client/warden_filer.cfg.j2"
    - "warden_filer.cfg.{{ ansible_lsb['codename'] }}.j2"
    - "warden_filer.cfg.j2"
  # Parametrized handlers: Please see the ``handlers/main.yml`` file for explanation of this hack.
  register: hmwc__regcfg
  notify:
    - Restart warden_filer receiver service
    - Restart warden_filer sender service

- name: "Warden filer {{ filer_config.domain }}: Configuring defaults for receiver daemon"
  template:
    src: default_warden_filer_receiver.j2
    dest: /etc/default/warden_filer_{{ filer_config.domain }}_receiver
    owner: root
    group: root
    mode: 0644
    backup: yes
  # Parametrized handlers: Please see the ``handlers/main.yml`` file for explanation of this hack.
  register: hmwc__regdfr
  when: filer_config.receiver_enabled
  notify:
    - Restart warden_filer receiver service
    - Restart warden_filer sender service

- name: "Warden filer {{ filer_config.domain }}: Configuring defaults for sender daemon"
  template:
    src: default_warden_filer_sender.j2
    dest: /etc/default/warden_filer_{{ filer_config.domain }}_sender
    owner: root
    group: root
    mode: 0644
    backup: yes
  # Parametrized handlers: Please see the ``handlers/main.yml`` file for explanation of this hack.
  register: hmwc__regdfs
  when: filer_config.sender_enabled
  notify:
    - Restart warden_filer receiver service
    - Restart warden_filer sender service

- name: "Warden filer {{ filer_config.domain }}: Configuring systemd service for receiver daemon"
  template:
    src: "{{ item }}"
    dest: /etc/systemd/system/warden_filer_{{ filer_config.domain }}_receiver.service
    owner: root
    group: root
    mode: 0755
    backup: yes
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.warden_client/warden_filer_receiver.service.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.warden_client/warden_filer_receiver.service.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.warden_client/warden_filer_receiver.service.j2"
    - "inventory/group_files/servers/honzamach.warden_client/warden_filer_receiver.service.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.warden_client/warden_filer_receiver.service.j2"
    - "warden_filer_receiver.service.{{ ansible_lsb['codename'] }}.j2"
    - "warden_filer_receiver.service.j2"
  # Parametrized handlers: Please see the ``handlers/main.yml`` file for explanation of this hack.
  register: hmwc__reginr
  when: filer_config.receiver_enabled
  notify:
    - Restart systemd
    - Restart warden_filer receiver service

- name: "Warden filer {{ filer_config.domain }}: Configuring systemd service for sender daemon"
  template:
    src: "{{ item }}"
    dest: /etc/systemd/system/warden_filer_{{ filer_config.domain }}_sender.service
    owner: root
    group: root
    mode: 0755
    backup: yes
  with_first_found:
    - "inventory/host_files/{{ inventory_hostname }}/honzamach.warden_client/warden_filer_sender.service.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.warden_client/warden_filer_sender.service.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers_{{ msms_server_type }}/honzamach.warden_client/warden_filer_sender.service.j2"
    - "inventory/group_files/servers/honzamach.warden_client/warden_filer_sender.service.{{ ansible_lsb['codename'] }}.j2"
    - "inventory/group_files/servers/honzamach.warden_client/warden_filer_sender.service.j2"
    - "warden_filer_sender.service.{{ ansible_lsb['codename'] }}.j2"
    - "warden_filer_sender.service.j2"
  # Parametrized handlers: Please see the ``handlers/main.yml`` file for explanation of this hack.
  register: hmwc__regins
  when: filer_config.sender_enabled
  notify:
    - Restart systemd
    - Restart warden_filer sender service

  # Parametrized handlers: Please see the ``handlers/main.yml`` file for explanation of this hack.
- name: "Warden filer {{ filer_config.domain }}: Calculating the need for service restart"
  set_fact:
    hmwc__to_restart: "{{ hmwc__to_restart|default({})|combine({filer_config.domain: hmwc__regcrt.changed or hmwc__regcfg.changed or (hmwc__regdfr and hmwc__regdfr.changed) or (hmwc__regdfs and hmwc__regdfs.changed) or (hmwc__reginr and hmwc__reginr.changed) or (hmwc__regins and hmwc__regins.changed)})}}"

- name: "Warden filer {{ filer_config.domain }}: Status of warden_filer services that need to be restarted"
  debug:
    var: hmwc__to_restart
  tags:
    - debug

- name: "Warden filer {{ filer_config.domain }}: Removing unnecessary files - warden_filer receiver"
  file:
    path: "{{ item }}"
    state: absent
  with_list:
    - "/etc/default/warden_filer_{{ filer_config.domain }}_receiver"
    - "/etc/systemd/system/warden_filer_{{ filer_config.domain }}_receiver.service"
  when: not filer_config.receiver_enabled
  notify:
    - Restart systemd

- name: "Warden filer {{ filer_config.domain }}: Removing unnecessary files - warden_filer sender"
  file:
    path: "{{ item }}"
    state: absent
  with_list:
    - "/etc/default/warden_filer_{{ filer_config.domain }}_sender"
    - "/etc/systemd/system/warden_filer_{{ filer_config.domain }}_sender.service"
  when: not filer_config.sender_enabled
  notify:
    - Restart systemd


#-------------------------------------------------------------------------------


- name: "Warden filer {{ filer_config.domain }}: Ensuring Warden receiver IS running and enabled at system start (based on config)"
  service:
    name: "warden_filer_{{ filer_config.domain }}_receiver"
    state: started
    enabled: yes
  when: hm_warden_client__manage_services and filer_config.receiver_enabled

- name: "Warden filer {{ filer_config.domain }}: Ensuring Warden receiver IS NOT running and disabled at system start (based on config)"
  service:
    name: "warden_filer_{{ filer_config.domain }}_receiver"
    state: stopped
    enabled: no
  when: hm_warden_client__manage_services and not filer_config.receiver_enabled

- name: "Warden filer {{ filer_config.domain }}: Ensuring Warden sender IS running and enabled at system start (based on config)"
  service:
    name: "warden_filer_{{ filer_config.domain }}_sender"
    state: started
    enabled: yes
  when: hm_warden_client__manage_services and filer_config.sender_enabled

- name: "Warden filer {{ filer_config.domain }}: Ensuring Warden sender IS NOT running and disabled at system start (based on config)"
  service:
    name: "warden_filer_{{ filer_config.domain }}_sender"
    state: stopped
    enabled: no
  when: hm_warden_client__manage_services and not filer_config.sender_enabled
